Capítulo 3
Exercício 7

Objetivo: Apresentar o novo peso -Emagrecendo e Engordando
Entrada de Dados (via usuário): peso
Processamento (cálculo): engordando = peso *1.15   ou engordando= peso + peso * 15 /100
                                          emagrecendo = peso * 0.8 ou emagrecendo = peso - (peso * 20 /100)
Saída de Dados (exibir na tela): engordando, emagrecendo

Resolução
programa {
  funcao inicio() {
    // declaração de variáveis
    real peso, engordando, emagrecendo
    // entrada de dados
    escreva("Peso..:")
    leia(peso)


    // processamento
    engordando = peso * 1.15 // engordando
    emagrecendo = peso * 0.8  // emagrecendo

    // saída de dados
    escreva("Novo Peso Engordando..: " , engordando)
    escreva("\nNovo Peso Emagrecendo..: ", emagrecendo)

  }
}


Exercício 17

Objetivo: Apresentar o comprimento, volume e área de uma esfera
Entrada: raio
Processamento: c= 2 * 3.14159 *raio 
                            a = 3.14159 * raio * raio
                            v= 3/4 * 3.14159 * raio ^ 3
Saída: c, a, v

Resolução
programa {
  funcao inicio() {
    // declaração de variáveis
    real raio, c, a, v
    // entrada de dados
    escreva("Raio: ")
    leia(raio)
    // processamento
    c= 2 * 3.14159 *raio 
    a = 3.14159 * raio * raio
    v= 3/4 * 3.14159 * raio ^ 3
    // saída de dados
    escreva("Comprimento da esfera: " , c)
    escreva("\nÁrea da esfera: " , a)
    escreva("\nVolume da esfera: " , v)

  }
}


Exercício 21

Objetivo: Calcular o salário a receber
Entrada: nrHoras, salMin, nrHorasExtra
Processamento:
  	valHoraTrab = salMin / 8  // (a) calculo do valor de 1 hora trabalhada
 	valHoraExtra = salMin/4  // (b) calculo do valor de 1 hora extra
     	salBruto = valHoraTrab * nrHoras  // (c)
        salExtra = valHoraExtra * nrHoraExtra  //(d)
        salReceber = salBruto + salExtra  // (e)

/* 
outra forma de calcular
salReceber = nrHoras * (salMin/8) + nrHorasExtra * (salMin/4) 

*/


Saída: salReceber

Resolução
programa {
  funcao inicio() {
    // declaração de variáveis
    inteiro nrHoras, nrHorasExtra
    real sHoraExtra, valHoraTrab,salReceber,salBruto,salExtra
    // entrada de dados
   escreva("Valor do salário Mínimo:")
   leia(salMin)
   escreva("Quantidade de horas trabalhada:")
   leia(nrHoras)
   escreva("Quantidade de Horas Extras:")
   leia(nrHorasExtra)
    // processamento
    valHoraTrab = salMin / 8  // (a) calculo do valor de 1 hora trabalhada
 	  valHoraExtra = salMin/4  // (b) calculo do valor de 1 hora extra
   	salBruto = valHoraTrab * nrHoras  // (c)
    salExtra = valHoraExtra * nrHorasExtra  //(d)
    salReceber = salBruto + salExtra  // (e)
    // saída de dados
    escreva("Salario a Receber:", salReceber)

  }
}

Capítulo 4
Estrutura Condicional

1- Se
2- Escolha


Se
   -- "verificar",  "comparar"

Os tipos:
    - Se simples
    - Se composto
    - Se encadeado (ou alinhado)

Problema: Faça um programa que leia um número e imprima-o se for par.

Problema: Imprimir o nr par
entrada de dados: nr
processamento: verificar se nr é par
saída de dados: imprimir o nr par

Estrutura Condicional simples
     -- onde a condição retorna Verdade ou Falso


se <condição> então
    < comandos verdade>
fim se

Estrutura Condicional Composta

se < condição > então
       <comando_verdade>
  senao
        <comando_falso>
fim se

a = 4; b = 2 c = 3 d = 5
x = 1 condição
se a > b então
x = b + c + a 
escreva (x)

x = b*c + a
2x3 + 4
6 + 4
10

Operadores relacionais
Algoritmo
Maior >
Menor <
Maior ou igual > = 
Menor ou igual <=
Igual =
diferente <>

C
>
<
>=
<=
Diferente é ==, cuidado com isso!

Operador de atribuição 
Algoritmo: = ←
C : =
x ← y
x = 2 y = 3

x = y; // atribuindo o valor de y em x 
↑
3

if (x==y) // verificando se o conteúdo da variavel 
             x é igual ao conteúdo da variável y.

se (x=y)

Condição 
se a> b então
x <- b+c*2

senão
x <- d * x

Operadores Lógicos
e          &&
ou         ||
não        !

A = 4 b = 3 c = 7 d = 8

E a>b e b> o c>a) então falso


Fim se 

Tabela Verdade:e (ambos)
Condição 1 Condição 2 Resultado
Verdade     Verdade    Verdade
Verdade     Falso      Falso
Falso       Verdade    Falso
Falso       Falso      Falso

Tabela Verdade: ou ambos
Verdade     Verdade    Verdade
Verdade     Falso      Verdade
Falso       Verdade    Verdade
Falso       Falso      Falso
                             
Tabela Verdade: não(nega a condição)
Verdade    Falso    Falso
Falso    Verdade     Verdade

A = 4 b = 3 c = 7 d = 8

Se não a>b e b<c então

Não 4>3 e 3>7

Não verdade e verdade

Falso e verdade -- falso
                             
Se não n1 < N2

Se n1>n2

Então (n1)



No Portugol
Estrutura condicional simples

se (condição) 
{
    <comando_verdade>
      
}  // fim se


Estrutura condicional Composta

se (condição) 
   {
        <comando_verdade> 
   }  
  senao
  {
        <comando_falso> 
   }  

Capitulo 4
Exercicio 1

Objetivo: Apresentar a mensagem Aprovado ou Reprovado

Entrada: nota1, nota2, nota3, nota4
Processamento:
     media = (nota1+nota2+nota3+nota4) / 4
     verificar se a media > 7
          
Saída: Aprovado ou Reprovado

Resolução
programa {
  funcao inicio() {
    // declaração de variáveis
     real nota1, nota2, nota3, nota4, media
    // entrada de dados
    escreva("Nota 1: ")
    leia(nota1)
    escreva("Nota 2: ")
    leia(nota2)
    escreva("Nota 3: ")
    leia(nota3)
    escreva("Nota 4: ")
    leia(nota4)
    // processamento
    media = (nota1+nota2+nota3+nota4) / 4
    escreva("Média: ", media)
    // verificando se a media é maior que 7
    se (media >=7)
    {
      escreva("\nAprovado")   // saída de dados
    }
    senao
    {
      escreva("\nReprovado")   // saída de dados
    }

 
  }
}

Exercícios:
Página 90 - 3, 7, 8, 15,17, 18, 19


Resolvendo o exercício 19
programa {
  funcao inicio() {
    // declaração de variáveis
    real altura, pesoIdeal
    inteiro sexo
    // entrada de dados
    escreva("Altura: ")
    leia(altura)
    escreva("Sexo 1- Masculino  2- Feminino: ")
    leia(sexo)
    // processamento
    // verificar o sexo
    se (sexo == 1)
    {
       pesoIdeal = (72.7 * altura) - 58
    }
    senao // o sexo não é 1
    {
         pesoIdeal = (62.1 * altura) - 44.7
    }     
    escreva("Peso Ideal: ", pesoIdeal)
 
  }
}

Acordando o Diabinho  --- Usuário digitou um numero para

programa {
  funcao inicio() {
    // declaração de variáveis
    real altura, pesoIdeal
    inteiro sexo
    // entrada de dados
    escreva("Altura: ")
    leia(altura)
    escreva("Sexo 1- Masculino  2- Feminino: ")
    leia(sexo)
    // processamento
    // verificar o sexo
    se (sexo == 1)
       {
          pesoIdeal = (72.7 * altura) - 58
           escreva("\nPeso Ideal: ", pesoIdeal)
       }
       senao se (sexo == 2) // o sexo não é 1
          {
            pesoIdeal = (62.1 * altura) - 44.7
             escreva("\nPeso Ideal: ", pesoIdeal)
          }  
            senao 
                { escreva ("Sexo Invalido ")}
   
 
  }
}

Exercício 20

em Portugol
leia(idade)
se (idade < 5) 
{ escreva( "Não possui categoria") }
   senao se (idade <=7)  
               escreva( "Infantil")
          senao se (idade <=10)  
                   escreva( "Juvenil")
                 senao se (idade <=15)  
                        escreva( "Adolescente")
                      senao se (idade <=30)  
                            escreva( "Adulto")
                    senao
                        escreva( "Senior")
 






